/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solve(TreeNode* root, int &ans){
        if (root == NULL) return 0;
        int left = solve(root->left,ans);
        int right = solve(root->right,ans);
        int leftpath = 0, rightpath = 0;
        if (root->left && root->left->val == root->val){
            leftpath = left+1;
        }
        if (root->right && root->right->val == root->val){
            rightpath = right + 1;
        }
        ans = max(ans,leftpath + rightpath);
        return max(leftpath,rightpath);
    }
    int longestUnivaluePath(TreeNode* root) {

        int ans = 0;
        solve(root,ans);
        return ans;
    }
};
