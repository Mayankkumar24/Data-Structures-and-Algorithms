class Solution {
public:
    vector<int> validSequence(string word1, string word2) {
        int n1 = word1.size(), n2 = word2.size();
        int i =n1-1, j=n2-1;
        vector<int>suff(n1,0);

        while(i >= 0 && j >= 0){
            if (word1[i] == word2[j]){
                if (i==n1-1){
                    suff[i] = 1;
                }else{
                    suff[i] = suff[i+1]+1;
                }
                i--; j--;
            }else{
                if (i==n1-1) i--;
                else{
                    suff[i] = suff[i+1]; i--;
                }
            }
        }
        while(i>=0){
            suff[i] = suff[i+1]+1;
            i--;
        }
        i = 0; j = 0;
        bool f=true; vector<int>ans;
        while(i<n1 && j<n2){
            if (word1[i] == word2[j]){
                ans.push_back(i);
                i++; j++;
            }else if (f){
                if (i+1<n1 && suff[i+1] >= (n2-(j+1))){
                    ans.push_back(i);
                    f = false; i++; j++;
                }else{
                    i++;
                }
            }else{
                i++;
            }
        }
        if (ans.size() == n2) return ans;
        else return {};
    }
};
