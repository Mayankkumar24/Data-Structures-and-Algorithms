class Solution {
public:
    int maximumLength(string s) {

        unordered_map<string,int>mp;
        int n = s.size();
        int i=0;

        while(i<n){
            string x = "";
            int j = i;
            while((j<n) && (s[j] == s[i])){
                x += s[j]; j++;
            }
            mp[x]++;
            i = j;
        }

        int ans = -1;

        for (auto [x,b] : mp){
            string a = x; int len = a.size(); int time = b;
            if (len == 1 && time >= 3){
                ans = max(ans,1);
            }
            else if (len >= 2){
                a.pop_back();
                if (time >= 3){
                    ans = max(ans,len);
                }else if (time == 2){
                    ans = max(ans,len-1);
                }else if (time == 1 && mp.count(a)){
                    ans = max(ans,len-1);
                }else if (len >= 3){
                    ans = max(ans,len-2);
                }
            }
            //return ans;
        }
        return ans;
    }
};
