class Solution {
public:
    int n,m;
    int Search(vector<vector<int>>&matrix,int &mid){
        int cnt = 0, col = m-1, row = 0;
        while(row<n && col >= 0){
            if (matrix[row][col] <= mid){
                cnt += (col+1); row++;
            }else{
                col--;
            }
        }
        return cnt;
    }
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        n = matrix.size(); m = matrix[0].size();
        int left = matrix[0][0], right = matrix[n-1][m-1];
        
        while(left <= right){
            int mid = (left+right)/2;
            if (Search(matrix,mid) < k){
                left = mid+1;
            }else{
                right = mid-1;
            }
        }
        return left;
    }
};
