class Solution {
public:
    int cnt_dist(vector<int>&nums,int &d){
        int i=0, j= 1;
        int pair_cnt = 0;
        int n= nums.size();
        while(j<n){
            while(nums[j] - nums[i] > d){
                i++;
            }
            pair_cnt += (j-i);
            j++;
        }
        return pair_cnt;
    }
    int smallestDistancePair(vector<int>& nums, int k) {
        int n = nums.size();
        sort(nums.begin(),nums.end());
        int l = 0, r = nums[n-1]-nums[0];
        
        int res = -1;
        while(l <= r){
            int mid = (l+r)/2;
            if (cnt_dist(nums,mid) < k){
                l = mid+1;
            }else{
                res = mid;
                r = mid-1;
            }
        }
        return res;
    }
};
