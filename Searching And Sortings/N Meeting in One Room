//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function to find the maximum number of meetings that can
    // be performed in a meeting room.
    int maxMeetings(int n, int start[], int end[]) {
        // Your code here
        vector<pair<int,int>>meetings;
        for (int i=0; i<n; i++){
            meetings.push_back({start[i],end[i]});
        }
        sort(meetings.begin(),meetings.end(),[](pair<int,int>a,pair<int,int>b){
            return a.second < b.second;
            //sort the meeting vector by their end time.
        });
        int ans = 0;
        int last_end = -1;
        for (auto &x : meetings){
            if (x.first > last_end){
                ans++; last_end = x.second;
            }
        }
        return ans;
        
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++)
            cin >> start[i];

        for (int i = 0; i < n; i++)
            cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(n, start, end);
        cout << ans << endl;
    }
    return 0;
}
// } Driver Code Ends
