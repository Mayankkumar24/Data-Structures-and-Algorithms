class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        
        string ans = "";
        priority_queue<pair<int,char>>pq;
        if (a > 0) pq.push({a,'a'});
        if (b > 0) pq.push({b,'b'});
        if (c > 0) pq.push({c,'c'});

        while(!pq.empty()){
            auto x = pq.top(); pq.pop();
            int cnt = x.first;
            char curr = x.second;

            int n = ans.size();

            if (n >= 2 && ans.back() == curr && ans[n-2] == curr){
                if (pq.empty()) break;
                auto y = pq.top(); pq.pop();

                ans += y.second;
                if (y.first-1 > 0){
                    pq.push({y.first-1,y.second});
                }
                pq.push({cnt,curr});
            }else{
                ans += curr;
                if (cnt -1 > 0){
                    pq.push({cnt-1,curr});
                }
            }
        }
        return ans;
    }
};
