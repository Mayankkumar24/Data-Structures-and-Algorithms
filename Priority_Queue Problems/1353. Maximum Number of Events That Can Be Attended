class Solution {
public:
    int maxEvents(vector<vector<int>>& events) {
        
        int n = events.size();
        priority_queue<int,vector<int>,greater<int>>pq;
        int day = 1, cnt = 0;
        int max_day = 0;
        for (auto &x : events){
            max_day = max(max_day,x[1]);
        }
        int i=0;
        sort(events.begin(),events.end());

        while(day <= max_day || !pq.empty()){
            while(i<n && events[i][0] == day){
                pq.push(events[i][1]); i++;
            }
            while(!pq.empty() && pq.top() < day){
                pq.pop();
            }
            if (!pq.empty()){
                pq.pop(); cnt++;
            }
            day++;
        }
        return cnt;
    }
};
