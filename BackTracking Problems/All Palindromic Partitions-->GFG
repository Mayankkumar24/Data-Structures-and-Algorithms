class Solution {
  public:
    bool isPalindrome(string &s,int i, int j){
        int n = s.size();
        while(i <= j){
            if (s[i] != s[j]) return false;
            i++;
            j--;
        }
        return true;
    }
    void Solve(string &s,vector<vector<string>>&ans,int start,vector<string>path){
        if (start == s.size()){
            ans.push_back(path);
            return;
        }
        for (int end = start; end<s.size(); end++){
            if (isPalindrome(s,start,end)){
                path.push_back(s.substr(start,end-start+1));
                Solve(s,ans,end+1,path);
                path.pop_back();
            }
        }
    }
    vector<vector<string>> palinParts(string &s) {
        // code here
        vector<vector<string>>ans;
        vector<string>path;
        Solve(s,ans,0,path);
        return ans;
    }
};
