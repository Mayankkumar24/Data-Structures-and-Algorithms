class Solution {
public:
    int n,m,x;
    bool dfs(int i, int j,int k,vector<vector<char>>&board,string &s){
        if (k == x) return true;
        if (i<0 || i>= n || j<0 || j>=m || s[k] != board[i][j]){
            return false;
        }
        char temp = board[i][j];
        board[i][j] = '#';
        bool found = dfs(i+1,j,k+1,board,s) ||
        dfs(i,j+1,k+1,board,s) ||
        dfs(i,j-1,k+1,board,s) ||
        dfs(i-1,j,k+1,board,s);

        board[i][j] = temp;
        return found;
    }
    bool exist(vector<vector<char>>& board, string word) {
        n = board.size(); m = board[0].size();
        x = word.size();
        //vector<vector<int>>vis(n,vector<int>(m,0));
        for (int i=0; i<n; i++){
            for (int j=0; j<m; j++){
                if (board[i][j] == word[0]){
                    if (dfs(i,j,0,board,word)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
};
