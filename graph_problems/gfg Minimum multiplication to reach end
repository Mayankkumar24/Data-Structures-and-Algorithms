//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    typedef pair<int,int>p;
    int minimumMultiplications(vector<int>& arr, int start, int end) {
        // code here
        if (start == end){
            return 0;
        }
        int n = arr.size();
        priority_queue<p,vector<p>,greater<p>>pq;
        pq.push({0,start});
        vector<int>dist(1e5,INT_MAX); dist[start] = 0;
        while(!pq.empty()){
            int step = pq.top().first;
            int num = pq.top().second; pq.pop();
            step++;
            for (auto &x : arr){
                int pro = (x*num)%100000;
                if (pro == end) return step;
                if (dist[pro] > step){
                    dist[pro] = step;
                    pq.push({step,pro});
                }
            }
        }
        return -1;
        
    }
};


//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        int start, end;
        cin >> start >> end;
        Solution obj;
        cout << obj.minimumMultiplications(arr, start, end) << endl;
    }
}

// } Driver Code Ends
