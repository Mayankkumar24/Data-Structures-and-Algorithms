class Solution {
public:
    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {
        int n = recipes.size();
        unordered_map<string,vector<string>>adj;
        unordered_map<string,int>inDegree;

        for (int i=0; i<n; i++){
            for (auto &x : ingredients[i]){
                adj[x].push_back(recipes[i]);
                inDegree[recipes[i]]++;
            }
        }
        vector<string>ans;
        queue<string>q;
        for (auto &x : supplies) q.push(x);

        while(!q.empty()){
            string u = q.front(); q.pop();
            for (auto &v : adj[u]){
                inDegree[v]--;
                if (inDegree[v] == 0){
                    ans.push_back(v); q.push(v);
                }
            }
        }
        return ans;
    }
};
