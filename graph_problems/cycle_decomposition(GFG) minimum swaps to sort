//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends


class Solution 
{
    public:
    //Function to find the minimum number of swaps required to sort the array. 
	int minSwaps(vector<int>&nums)
	{
	    // Code here
	    int n = nums.size();
	    vector<pair<int,int>>v(n);
	    for (int i=0; i<nums.size(); i++){
	        v[i] = {nums[i],i};
	    }
	    sort(v.begin(),v.end());
	    int swap = 0;
	    vector<int>visited(n,false);
	    
	    for (int i=0; i<n; i++){
	        if (visited[i] || v[i].second == i){
	            continue;
	        }
	        int x = i, cycle = 0;
	        while(!visited[x]){
	            visited[x] = true;
	            x = v[x].second;
	            cycle++;
	        }
	        if (cycle > 0) swap += (cycle-1);
	    }
	    return swap;
	}
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}
// } Driver Code Ends
