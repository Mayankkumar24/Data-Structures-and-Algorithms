class Solution {
public:
    int n;
    bool solve(vector<int>&nums,vector<vector<int>>&q,int &k){
        vector<int>pre(n+1,0);
        int qs = q.size();
        for (int i=0; i<min(k,qs); i++){
            pre[q[i][0]] += q[i][2];
            pre[q[i][1]+1] -= q[i][2];
        }
        for (int i=1; i<n; i++){
            pre[i] += pre[i-1];
        }
        for (int i=0; i<n; i++){
            if (nums[i] > pre[i]) return false;
        }
        return true;
    }
    int minZeroArray(vector<int>& nums, vector<vector<int>>& queries) {
        n = nums.size();
        int ans = INT_MAX;
        int l = 0, r = queries.size();
        while(l <= r){
            int mid = (l+r)/2;
            if (solve(nums,queries,mid)){
                ans = min(ans,mid); r = mid-1;
            }else{
                l = mid+1;
            }
        }
        if (ans == INT_MAX) return -1;
        else return ans;
    }
};
