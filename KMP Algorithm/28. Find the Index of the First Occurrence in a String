class Solution {
public:
    void Fill_LPS(string &pat,vector<int>&lps){
        int m = pat.size();
        int j = 1,length = 0; lps[0] = 0;
        while(j<m){
            if (pat[j] == pat[length]){
                length++; lps[j] = length; j++;
            }else{
                if (length > 0){
                    length = lps[length-1];
                }else{
                    lps[j] = 0; j++;
                }
            }
        }
    }
    int strStr(string haystack, string needle) {
        int n = haystack.size(), m = needle.size();
        vector<int>LPS(m);
        Fill_LPS(needle,LPS);
        int i=0,j=0;
        while(i<n){
            if (haystack[i] != needle[j]){
                if (j == 0) i++;
                else j = LPS[j-1];
            }else{
                i++; j++;
                if (j>=m) return i-m;
                if (i>=n) return -1;
            }
        }
        return -1;
    }
};
