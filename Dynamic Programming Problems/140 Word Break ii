class Solution {
public:
    int n;
    vector<string>solve(string &s,unordered_map<string,int>&mp,int i){
        if (i >= n) return {""};
        vector<string>ans;
        string word;
        for (int j=i; j<s.size(); j++){
            word += s[j];
            if (mp.find(word) == mp.end()) continue;
            auto right = solve(s,mp,j+1);

            for (auto forEachWord : right){
                string Endpart;
                if (forEachWord.size()>0) Endpart = " "+forEachWord;
                ans.push_back(word+Endpart);
            }
        }
        return ans;
    }
    vector<string> wordBreak(string s, vector<string>& wordDict) {
        n = s.size();
        unordered_map<string,int>mp;
        for (auto &x : wordDict){
            mp[x]++;
        }
        return solve(s,mp,0);
    }
};
