class Solution {
  public:
    int solve(int i, int n,vector<int>&arr,vector<int>&dp){
        if (i > n) return 0;
        if (dp[i] != -1) return dp[i];
        int take = arr[i] + solve(i+2,n,arr,dp);
        int skip = solve(i+1,n,arr,dp);
        return dp[i] = max(take,skip);
    }
    int maxValue(vector<int>& arr) {
        // your code here
        int n = arr.size();
        vector<int>dp(n+1,-1);
        int way1 = solve(0,n-2,arr,dp);
        for (int i=0; i<n; i++) dp[i] = -1;
        int way2 = solve(1,n-1,arr,dp);
        return max(way1,way2);
    }
};
