class Solution {
public:
    int n;
    int dp[2][105][105];
    int solve_for_alice(vector<int>&piles,int person, int i,int m){
        if (i >= n) return 0;
        if (dp[person][i][m] != -1) return dp[person][i][m];
        int ans = (person == 1) ? -1 : INT_MAX;
        int stones = 0;
        for (int x = 1; x <= min(2*m,n-i); x++){
            stones += piles[i+x-1];
            if (person == 1){
                ans = max(ans,stones + solve_for_alice(piles,0,i+x,max(m,x)));
            }else{
                ans = min(ans,solve_for_alice(piles,1,i+x,max(m,x)));
            }
        }
        return dp[person][i][m] = ans;
    }
    int stoneGameII(vector<int>& piles) {
        n = piles.size();
        memset(dp,-1,sizeof(dp));
        return solve_for_alice(piles,1,0,1);
    }
};
